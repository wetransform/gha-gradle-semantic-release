name: 'Publish/release Gradle library'
description: 'Perform vulnerability scan and report using trivy'
branding:
  icon: upload
  color: green
inputs:
  publish-tasks:
    description: Gradle tasks to run for publishing, separated by space
    default: 'publish'
  release-tasks:
    description: Gradle tasks to run for creating a release, separated by space - if not specified will use publish-tasks
    default: ''
  release:
    description: If a release should be created if applicable; otherwise only the publish tasks are run
    default: 'true' # Note: Action inputs are always of type string
  github-token:
    description: Github token to use for release
    required: true
    # Permissions needed
    #   contents: write
    #   issues: write
    #   pull-requests: write
  release-dryrun:
    description: If a dry run should be done for the release
    default: 'false'
outputs:
  release-published:
    description: "If a release was published"
    value: ${{ steps.release.outputs.new_release_published }}
  release-version:
    description: "Release version if a release was published"
    value: ${{ steps.release.outputs.new_release_version }}
runs:
  using: "composite"
  steps:

    - name: Create release configuration file
      if: ${{ inputs.release == 'true' && hashFiles('.releaserc.yml') == '' }}
      shell: bash
      # TODO rather use a template?
      run: |
        cat <<EOF > .releaserc.yml
        ---
        branches: ${{ github.head_ref || github.ref_name }}

        plugins:
          - - "@semantic-release/commit-analyzer"
            # see https://github.com/semantic-release/commit-analyzer?tab=readme-ov-file#options
            - preset: conventionalcommits
          - - "@semantic-release/release-notes-generator"
            # see https://github.com/semantic-release/release-notes-generator?tab=readme-ov-file#options
            - preset: conventionalcommits
              presetConfig:
                issuePrefixes: ['ING-', 'WGS-', 'SVC-']
                issueUrlFormat: 'https://wetransform.atlassian.net/browse/{{prefix}}{{id}}'
              parserOpts:
                # https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#referenceactions
                # set to null to reference an issue without action (but will still show it "closes" the issue in the changelog)
                # referenceActions: null
          - "@semantic-release/changelog"
          - - "@semantic-release/exec"
            - verifyReleaseCmd: ./gradlew verifyNoSnapshotDependencies
              publishCmd: RELEASE=true ./gradlew showVersion verifyReleaseVersion \$PUBLISH_TASKS
          - - "@semantic-release/git"
            - assets:
                - CHANGELOG.md
          - "@semantic-release/github"
        EOF

    - name: Install NodeJs
      if: ${{ inputs.release == 'true' }}
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
      with:
        node-version: 20

    - name: Release with semantic-release
      id: release
      if: ${{ inputs.release == 'true' }}
      uses: cycjimmy/semantic-release-action@cb425203a562475bca039ba4dbf90c7f9ac790f4 # v4.1.0
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        GIT_AUTHOR_NAME: wetransform Bot
        GIT_AUTHOR_EMAIL: 113353961+wetransformer@users.noreply.github.com
        GIT_COMMITTER_NAME: wetransform Bot
        GIT_COMMITTER_EMAIL: 113353961+wetransformer@users.noreply.github.com
        RUNNER_DEBUG: 1

        # Plugin versions

        # renovate: datasource=npm depName=@semantic-release/changelog
        SEMANTIC_RELEASE_CHANGELOG_VERSION: 6.0.3

        # renovate: datasource=npm depName=@semantic-release/exec
        SEMANTIC_RELEASE_EXEC_VERSION: 6.0.3

        # renovate: datasource=npm depName=@semantic-release/git
        SEMANTIC_RELEASE_GIT_VERSION: 10.0.1

        # renovate: datasource=npm depName=conventional-changelog-conventionalcommits
        CONVENTIONAL_CHANGELOG_CONVENTIONALCOMMITS_VERSION: 8.0.0

        # Tasks as environment variable
        PUBLISH_TASKS: ${{ inputs.release-tasks != '' && inputs.release-tasks || inputs.publish-tasks }}
      with:
        dry_run: ${{ inputs.release-dryrun }}
        semantic_version: 24.1.1

        extra_plugins:
          "@semantic-release/changelog@\
          ${{ env.SEMANTIC_RELEASE_CHANGELOG_VERSION }} \
          @semantic-release/exec@\
          ${{ env.SEMANTIC_RELEASE_EXEC_VERSION }} \
          @semantic-release/git@\
          ${{ env.SEMANTIC_RELEASE_GIT_VERSION }} \
          conventional-changelog-conventionalcommits@\
          ${{ env.CONVENTIONAL_CHANGELOG_CONVENTIONALCOMMITS_VERSION }} \
          "

      # Run normal publishing if releasing is not enabled or if no release was created
    - name: Publish with Gradle
      if: ${{ inputs.release != 'true' || steps.release.outputs.new_release_published == 'false' }}
      shell: bash
      run: ./gradlew ${{ inputs.publish-tasks }}
